{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "P202 Bootcamp EC2 resources",
  "Parameters": {
    "paramBastionSGId": {
      "Description": "Security Group ID of the bastion to allow SSH from",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "paramPrivateSubnetIds": {
      "Description": "List of private subnet ids",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "paramPublicSubnetIds": {
      "Description": "List of public subnet ids",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "paramResourceBucketName": {
      "Description": "Resources bucket name",
      "Type": "String"
    },
    "paramVPCId": {
      "Description": "VPC ID",
      "Type": "AWS::EC2::VPC::Id"
    },
    "paramWebServerASGDesiredSize": {
      "Description": "Desired number of web server ec2 instances to launch",
      "Type": "Number"
    },
    "paramWebServerKeyName": {
      "Description": "Key file to use for web server",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Resources": {
    "EC2IAMRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/"
      },
      "Type": "AWS::IAM::Role"
    },
    "ElasticLoadBalancer": {
      "Properties": {
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "10",
          "Target": "HTTP:80/",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "Listeners": [
          {
            "InstancePort": "80",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          }
        ],
        "LoadBalancerName": "P202Bootcamp-ELB",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSG"
          }
        ],
        "Subnets": {
          "Ref": "paramPublicSubnetIds"
        }
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "LaunchConfig": {
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "WebServerInstanceProfile"
        },
        "ImageId": "ami-467ca739",
        "InstanceType": "t2.micro",
        "KeyName": {
          "Ref": "paramWebServerKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "WebSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum update -y\n",
                "yum install httpd -y\n",
                "chkconfig httpd on\n",
                "aws s3 sync s3://",
                {
                  "Ref": "paramResourceBucketName"
                },
                "/ /var/www/html/\n",
                "export INSTANCE_ID=`curl 169.254.169.254/latest/meta-data/instance-id`\n",
                "echo $INSTANCE_ID > /var/www/html/instance.html\n",
                "service httpd start\n",
                "echo '* * * * * root aws s3 sync s3://",
                {
                  "Ref": "paramResourceBucketName"
                },
                "/ /var/www/html/' > /etc/cron.d/per_minute\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "LoadBalancerSG": {
      "Properties": {
        "GroupDescription": "HTTP/All to load balancer",
        "GroupName": "P202Bootcamp_LoadBalancer_SG",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          }
        ],
        "VpcId": {
          "Ref": "paramVPCId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "S3ReadIAMPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:ListAllMyBuckets"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "paramResourceBucketName"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectAcl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "paramResourceBucketName"
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "paramResourceBucketName"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "EC2IAMRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "WebSecurityGroup": {
      "Properties": {
        "GroupDescription": "HTTP/All and SSH/Bastion access to Webservers",
        "GroupName": "P202Bootcamp_WebServer_SG",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          },
          {
            "FromPort": "22",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "paramBastionSGId"
            },
            "ToPort": "22"
          }
        ],
        "VpcId": {
          "Ref": "paramVPCId"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "WebServerGroup": {
      "Properties": {
        "AutoScalingGroupName": "P202Bootcamp_WebServer_ASG",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ],
        "MaxSize": {
          "Ref": "paramWebServerASGDesiredSize"
        },
        "MinSize": {
          "Ref": "paramWebServerASGDesiredSize"
        },
        "VPCZoneIdentifier": {
          "Ref": "paramPrivateSubnetIds"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "WebServerInstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "EC2IAMRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    }
  },
  "Outputs": {
    "LoadBalancerDNSName": {
      "Description": "DNS name of the elastic load balancer",
      "Value": {
        "Fn::GetAtt": [
          "ElasticLoadBalancer",
          "DNSName"
        ]
      }
    }
  }
}